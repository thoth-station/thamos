# coding: utf-8

"""
    Thoth User API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.6.0-dev
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class QebHwtThamosAdviseInput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'github_event_type': 'str',
        'github_check_run_id': 'int',
        'github_installation_id': 'int',
        'github_base_repo_url': 'str',
        'github_head_repo_url': 'str',
        'origin': 'str',
        'revision': 'str'
    }

    attribute_map = {
        'github_event_type': 'github_event_type',
        'github_check_run_id': 'github_check_run_id',
        'github_installation_id': 'github_installation_id',
        'github_base_repo_url': 'github_base_repo_url',
        'github_head_repo_url': 'github_head_repo_url',
        'origin': 'origin',
        'revision': 'revision'
    }

    def __init__(self, github_event_type=None, github_check_run_id=None, github_installation_id=None, github_base_repo_url=None, github_head_repo_url=None, origin=None, revision=None):  # noqa: E501
        """QebHwtThamosAdviseInput - a model defined in Swagger"""  # noqa: E501
        self._github_event_type = None
        self._github_check_run_id = None
        self._github_installation_id = None
        self._github_base_repo_url = None
        self._github_head_repo_url = None
        self._origin = None
        self._revision = None
        self.discriminator = None
        self.github_event_type = github_event_type
        self.github_check_run_id = github_check_run_id
        self.github_installation_id = github_installation_id
        self.github_base_repo_url = github_base_repo_url
        self.github_head_repo_url = github_head_repo_url
        self.origin = origin
        self.revision = revision

    @property
    def github_event_type(self):
        """Gets the github_event_type of this QebHwtThamosAdviseInput.  # noqa: E501

        Type of GitHub event.  # noqa: E501

        :return: The github_event_type of this QebHwtThamosAdviseInput.  # noqa: E501
        :rtype: str
        """
        return self._github_event_type

    @github_event_type.setter
    def github_event_type(self, github_event_type):
        """Sets the github_event_type of this QebHwtThamosAdviseInput.

        Type of GitHub event.  # noqa: E501

        :param github_event_type: The github_event_type of this QebHwtThamosAdviseInput.  # noqa: E501
        :type: str
        """
        if github_event_type is None:
            raise ValueError("Invalid value for `github_event_type`, must not be `None`")  # noqa: E501

        self._github_event_type = github_event_type

    @property
    def github_check_run_id(self):
        """Gets the github_check_run_id of this QebHwtThamosAdviseInput.  # noqa: E501

        ID of the check-run that shall carry the thamos advise.  # noqa: E501

        :return: The github_check_run_id of this QebHwtThamosAdviseInput.  # noqa: E501
        :rtype: int
        """
        return self._github_check_run_id

    @github_check_run_id.setter
    def github_check_run_id(self, github_check_run_id):
        """Sets the github_check_run_id of this QebHwtThamosAdviseInput.

        ID of the check-run that shall carry the thamos advise.  # noqa: E501

        :param github_check_run_id: The github_check_run_id of this QebHwtThamosAdviseInput.  # noqa: E501
        :type: int
        """
        if github_check_run_id is None:
            raise ValueError("Invalid value for `github_check_run_id`, must not be `None`")  # noqa: E501

        self._github_check_run_id = github_check_run_id

    @property
    def github_installation_id(self):
        """Gets the github_installation_id of this QebHwtThamosAdviseInput.  # noqa: E501

        GitHub App Installation ID.  # noqa: E501

        :return: The github_installation_id of this QebHwtThamosAdviseInput.  # noqa: E501
        :rtype: int
        """
        return self._github_installation_id

    @github_installation_id.setter
    def github_installation_id(self, github_installation_id):
        """Sets the github_installation_id of this QebHwtThamosAdviseInput.

        GitHub App Installation ID.  # noqa: E501

        :param github_installation_id: The github_installation_id of this QebHwtThamosAdviseInput.  # noqa: E501
        :type: int
        """
        if github_installation_id is None:
            raise ValueError("Invalid value for `github_installation_id`, must not be `None`")  # noqa: E501

        self._github_installation_id = github_installation_id

    @property
    def github_base_repo_url(self):
        """Gets the github_base_repo_url of this QebHwtThamosAdviseInput.  # noqa: E501

        URL of the GitHub repository containing the Pull Request.  # noqa: E501

        :return: The github_base_repo_url of this QebHwtThamosAdviseInput.  # noqa: E501
        :rtype: str
        """
        return self._github_base_repo_url

    @github_base_repo_url.setter
    def github_base_repo_url(self, github_base_repo_url):
        """Sets the github_base_repo_url of this QebHwtThamosAdviseInput.

        URL of the GitHub repository containing the Pull Request.  # noqa: E501

        :param github_base_repo_url: The github_base_repo_url of this QebHwtThamosAdviseInput.  # noqa: E501
        :type: str
        """
        if github_base_repo_url is None:
            raise ValueError("Invalid value for `github_base_repo_url`, must not be `None`")  # noqa: E501

        self._github_base_repo_url = github_base_repo_url

    @property
    def github_head_repo_url(self):
        """Gets the github_head_repo_url of this QebHwtThamosAdviseInput.  # noqa: E501

        URL of the Pull Request's head commit.  # noqa: E501

        :return: The github_head_repo_url of this QebHwtThamosAdviseInput.  # noqa: E501
        :rtype: str
        """
        return self._github_head_repo_url

    @github_head_repo_url.setter
    def github_head_repo_url(self, github_head_repo_url):
        """Sets the github_head_repo_url of this QebHwtThamosAdviseInput.

        URL of the Pull Request's head commit.  # noqa: E501

        :param github_head_repo_url: The github_head_repo_url of this QebHwtThamosAdviseInput.  # noqa: E501
        :type: str
        """
        if github_head_repo_url is None:
            raise ValueError("Invalid value for `github_head_repo_url`, must not be `None`")  # noqa: E501

        self._github_head_repo_url = github_head_repo_url

    @property
    def origin(self):
        """Gets the origin of this QebHwtThamosAdviseInput.  # noqa: E501

        Origin of the repo where the Pull Request was opened.  # noqa: E501

        :return: The origin of this QebHwtThamosAdviseInput.  # noqa: E501
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this QebHwtThamosAdviseInput.

        Origin of the repo where the Pull Request was opened.  # noqa: E501

        :param origin: The origin of this QebHwtThamosAdviseInput.  # noqa: E501
        :type: str
        """
        if origin is None:
            raise ValueError("Invalid value for `origin`, must not be `None`")  # noqa: E501

        self._origin = origin

    @property
    def revision(self):
        """Gets the revision of this QebHwtThamosAdviseInput.  # noqa: E501

        sha of the Pull Request's head commit.  # noqa: E501

        :return: The revision of this QebHwtThamosAdviseInput.  # noqa: E501
        :rtype: str
        """
        return self._revision

    @revision.setter
    def revision(self, revision):
        """Sets the revision of this QebHwtThamosAdviseInput.

        sha of the Pull Request's head commit.  # noqa: E501

        :param revision: The revision of this QebHwtThamosAdviseInput.  # noqa: E501
        :type: str
        """
        if revision is None:
            raise ValueError("Invalid value for `revision`, must not be `None`")  # noqa: E501

        self._revision = revision

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QebHwtThamosAdviseInput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QebHwtThamosAdviseInput):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
